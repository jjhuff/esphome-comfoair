esphome:
  name: comfoair
  platform: ESP8266
  board: esp01_1m
  includes:
    - comfoair.h

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Dashboard Fallback Hotspot"
    password: ""

captive_portal:

# Disable uart logging
logger:
  baud_rate: 0

# Enable Home Assistant API
api:
  #  password: 'set-an-api-password-here'

web_server:
  port: 80

ota:
  password: ""

sensor:
binary_sensor:

switch:
  - platform: gpio
    pin: GPIO4
    name: "Green LED"
  - platform: gpio
    pin: GPIO5
    name: "Red LED"
  - platform: gpio
    pin: GPIO14
    name: "Relay"

uart:
  id: uart_bus
  baud_rate: 9600
  tx_pin: TX
  rx_pin: RX 

climate:
- platform: custom
  lambda: |-
    auto ca = new esphome::comfoair::ComfoAirComponent(id(uart_bus));
    App.register_component(ca);

    ca->outside_air_temperature = new Sensor("Outside Air");
    ca->outside_air_temperature->set_unit_of_measurement("째C");
    ca->outside_air_temperature->set_accuracy_decimals(1);
    App.register_sensor(ca->outside_air_temperature);
    ca->supply_air_temperature = new Sensor("Supply Air");
    ca->supply_air_temperature->set_unit_of_measurement("째C");
    ca->supply_air_temperature->set_accuracy_decimals(1);
    App.register_sensor(ca->supply_air_temperature);
    ca->return_air_temperature = new Sensor("Return Air");
    ca->return_air_temperature->set_unit_of_measurement("째C");
    ca->return_air_temperature->set_accuracy_decimals(1);
    App.register_sensor(ca->return_air_temperature);
    ca->exhaust_air_temperature = new Sensor("Exhaust Air");
    ca->exhaust_air_temperature->set_unit_of_measurement("째C");
    ca->exhaust_air_temperature->set_accuracy_decimals(1);
    App.register_sensor(ca->exhaust_air_temperature);

    ca->fan_supply_air_percentage = new Sensor("Fan Supply Air");
    ca->fan_supply_air_percentage->set_unit_of_measurement("%");
    App.register_sensor(ca->fan_supply_air_percentage);
    ca->fan_exhaust_air_percentage = new Sensor("Fan Exhaust Air");
    ca->fan_exhaust_air_percentage->set_unit_of_measurement("%");
    App.register_sensor(ca->fan_exhaust_air_percentage);
    ca->fan_speed_supply = new Sensor("Fan Speed Supply");
    App.register_sensor(ca->fan_speed_supply);
    ca->fan_speed_exhaust = new Sensor("Fan Speed Exhaust");
    App.register_sensor(ca->fan_speed_exhaust);

    ca->is_bypass_valve_open = new BinarySensor();
    ca->is_bypass_valve_open->set_name("Bypass Valve");
    App.register_binary_sensor(ca->is_bypass_valve_open);
    ca->is_preheating = new BinarySensor();
    ca->is_preheating->set_name("Preheating");
    App.register_binary_sensor(ca->is_preheating);
    ca->is_supply_fan_active = new BinarySensor();
    ca->is_supply_fan_active->set_name("Supply Fan");
    App.register_binary_sensor(ca->is_supply_fan_active);
    ca->is_filter_full = new BinarySensor();
    ca->is_filter_full->set_name("Filter Full");
    App.register_binary_sensor(ca->is_filter_full);
    ca->is_summer_mode = new BinarySensor();
    ca->is_summer_mode->set_name("Summer Mode");
    App.register_binary_sensor(ca->is_summer_mode);

    ca->return_air_level = new Sensor("Return Air Level");
    App.register_sensor(ca->return_air_level);
    ca->supply_air_level = new Sensor("Supply Air Level");
    App.register_sensor(ca->supply_air_level);

    App.register_climate(ca);
    return {ca};
    
  climates:
    - name: "comfoair"
